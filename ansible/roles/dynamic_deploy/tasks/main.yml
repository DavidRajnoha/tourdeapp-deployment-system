---
- name: Create a network for redis
  docker_network:
    name: redis-network

- name: Ensure redis directory exists
  file:
    path: "{{ redis_data_dir }}"
    state: directory
    owner: root
    group: root
    mode: "0777"

- name: Run Redis
  docker_container:
    name: "{{ redis_container_name }}"
    image: "redis:{{ redis_docker_tag }}"
    restart_policy: unless-stopped
    recreate: false
    volumes:
      - "{{ redis_data_dir }}:/data"
    networks:
      - name: redis-network
    labels:
      traefik.enable: "false"
    stop_signal: SIGQUIT


- name: Copy project files to the remote server
  copy:
    src: "{{ source_app_dir }}"
    dest: "{{ target_app_dir }}"
    owner: root
    group: root
    mode: "0755"

- name: Build Docker image for Flask app
  community.general.docker_image:
    name: dynamic_deploy_rq_worker
    source: build
    build:
      path: "{{ target_app_dir }}"
      dockerfile: "{{ rq_worker_dockerfile }}"
    state: present
    force_source: yes

- name: Run RQ worker
  docker_container:
    name: dynamic_deploy_rq_worker_container
    image: dynamic_deploy_rq_worker
    state: started
    restart_policy: always
    recreate: true
    networks:
      - name: redis-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    env:
      BASE_DOMAIN: "{{ base_domain }}"
      TRAEFIK_NETWORK: web
      RQ_DB: "{{ rq_db_id }}"
      REDIS_HOST: "{{ redis_container_name }}"
      REDIS_PORT: "{{ redis_port }}"
      DEPLOY_TIMEOUT: "{{ deploy_timeout }}"
    labels:
      traefik.enable: "false"

- name: Build Docker image for Flask app
  community.general.docker_image:
    name: dynamic_deploy_app
    source: build
    build:
      path: "{{ target_app_dir }}"
    state: present
    force_source: yes

- name: Run Docker container for Flask app
  docker_container:
    name: dynamic_deploy_app_container
    image: dynamic_deploy_app
    restart_policy: unless-stopped
    recreate: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      traefik.enable: "true"
      traefik.http.routers.deploy.rule: "Host(`{{ deploy_url }}`)"
      traefik.http.routers.deploy.middlewares: "deploy-auth"
      traefik.http.middlewares.deploy-auth.basicauth.users: "{{ dynamic_deploy_user }}:{{ dynamic_deploy_password | password_hash('blowfish','1234567890123456789012') }}"
      traefik.http.routers.deploy.entrypoints: "websecure"
      traefik.http.routers.deploy.tls.certresolver: "tlsResolver"
    networks:
      - name: web
      - name: redis-network
    env:
      BASE_DOMAIN: "{{ base_domain }}"
      TRAEFIK_NETWORK: web
      RQ_DB: "{{ rq_db_id }}"
      REDIS_HOST: "{{ redis_container_name }}"
      REDIS_PORT: "{{ redis_port }}"
      DEBUG_MODE: "{{ debug_mode }}"
