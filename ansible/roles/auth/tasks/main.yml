---
- name: Copy project files to the remote server
  copy:
    src: "{{ source_auth_dir }}"
    dest: "{{ target_auth_dir }}"
    owner: root
    group: root
    mode: "0755"

- name: Build Docker image for Flask app
  community.general.docker_image:
    name: staging_auth_app
    source: build
    build:
      path: "{{ target_auth_dir }}"
    state: present
    force_source: yes

- name: Run Docker container for Flask app
  docker_container:
    name: staging_auth_app_container
    image: staging_auth_app
    restart_policy: unless-stopped
    recreate: true
    labels:
      traefik.enable: "true"
      traefik.http.routers.auth.rule: "Host(`{{ auth_url }}`)"
      traefik.http.routers.auth.entrypoints: "websecure"
      traefik.http.routers.auth.tls.certresolver: "tlsResolver"
    networks:
      - name: web
    env:
      REGISTRY_PASSWORD: "{{ htpasswd_password }}"
      REGISTRY: "{{ base_domain }}"
      TDA_ROUND: "{{ tda_round }}"
      DEBUG_MODE: "{{ debug_mode }}"
      GHOST_CONTAINER: ghost_api_app_container


- name: Copy project files to the remote server
  copy:
    src: "{{ source_ghost_dir }}"
    dest: "{{ target_ghost_dir }}"
    owner: root
    group: root
    mode: "0755"


- name: Build Docker image for Flask ghost app
  community.general.docker_image:
    name: ghost_api_app
    source: build
    build:
      path: "{{ target_ghost_dir }}"
    state: present
    force_source: yes


- name: Run Docker container for Flask app
  docker_container:
    name: ghost_api_app_container
    image: ghost_api_app
    restart_policy: unless-stopped
    recreate: true
    labels:
      traefik.enable: "true"
      traefik.http.routers.ghost-api.rule: "Host(`{{ ghost_url }}`)"
      traefik.http.routers.ghost-api.entrypoints: "websecure"
      traefik.http.routers.ghost-api.tls.certresolver: "tlsResolver"
      traefik.http.routers.ghost-api.middlewares: "ghost-auth"
      traefik.http.middlewares.ghost-auth.basicauth.users: "{{ ghost_auth_user }}:{{ ghost_auth_password | password_hash('blowfish','1234567890123456789012') }}"
    networks:
      - name: web
      - name: "{{ redis_network }}"
    env:
      DEBUG_MODE: "{{ debug_mode }}"
